laserLANG(1)                General Commands Manual               laserLANG(1)

NAME
       laserLANG - Another esolang that focus on reflecting a laser

SYNOPSIS
       laserLANG [programfile]

DESCRIPTION
       laserLANG is a esoteric programming language, which is inspired by mar‐
       ioLANG and brainfuck.

MEMORY MANAGEMENT
       Each memory cell is an signed 8 bit integer, ranging from [-128, +127],
       there is no overflow protection, making 127 + 1 = -128.

       >   Move memory pointer right

       <   Move memory pointer left

       -   Add one to memory cell under the pointer

       '   Subtract one from memory cell under the pointer

       =   Output ascii character from the current memory cell

       "   Output numeric value from the current memory cell

CONTROL FLOW
       +   Turn the direction 90 degree clockwise when the current memory cell
           is positive, counter clockwise when negative.

       #   Turn the direction 90 degree counter  clockwise  when  the  current
           memory cell is positive, clockwise when negative.

       /   Toggle right and up direction, and left and down direction.

       \   Toggle right and down direction, and left and up direction.

       - and =
           The  laser  will  stop if it hits any of these while going on the y
           axis.

       ' and "
           The laser will stop if it hits any of these while going  on  the  x
           axis.

       <   The laser will stop if it's going right, otherwise it will be going
           left.

       >   The laser will stop if it's going left, otherwise it will be  going
           right.

       ^   The  laser will stop if it's going down, otherwise it will be going
           up.

       v   The laser will stop if it's going up, otherwise it  will  be  going
           down.

DEBUG
       p   Will print laser position and memory cell values

COMMENTS
       Anything not recognized as a command is a comment.

EXAMPLE
       An example "Hello World!" program can be written as the following:

       ----------\                    /<<<<\
                                      '
                 v                    /
                 #>------->---------->--->-/
                 >--=>-=-------==---=>--=\
                       /=---------------<<
                       \>=---=\ /=>-=>=
                                '
                                '
                              ' '
                              ' '
                              ' '
                              ' '
                              ' '
                              ' '
                              \=/

       Output: Hello World!

       ----=   This code outputs '4':

       This  gets done because `-' adds one to the memory cell, and `=' prints
       it.

       The first part is a loop:

       ----------\                    /<<<<\
                                      '
                 v                    /
                 #>------->---------->--->-/

       The laser gets shot in the top left corner moving to the  right  (Along
       the x axis), when it reaches the `\' the first memory cell contains 10.

       The  `\'  will send the laser downwards where it reaches the `v', which
       does nothing when approached from above.

       The `#' is a junction sending the laser 90 degree counter clockwise  if
       the memory cell under the pointer is positive.

       `>' moves the memory pointer to the right.

       The  laser  will eventually end at `/', at which point it will be redi‐
       rected upwards.

       `'' will subtract one from the memory cell under the pointer.

       The laser will hit the `v' from the side making it go downwards.

       The loop finishes with the values `0', `70', `100', `30', `10'  in  the
       memory  cells,  at which point the `#' junction will do nothing, as the
       cell under the cusor is zero.

                                                                  laserLANG(1)
